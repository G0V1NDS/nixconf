#!/bin/bash
# Loads all tmux sessions in separate windows

source "$HOME/.local/bin/tmux/tmux-common-functions"

# Open tmux session if exist
tmux_sessions=$(tmux list-sessions -F "#{session_name}" 2>/dev/null)
session_icon_name_map=$(get_default_session_icon_name_map)

if [[ -z "${tmux_sessions}" ]]; then
    echo -e "No running tmux session found" >&2
    # Saving the session with tmux-resurrect
    if [[ -d "$XDG_CONFIG_HOME/tmux/plugins/tmux-resurrect" ]]; then
        echo -e "Restoring the session with tmux-ressurect..." >&2
        tmux start-server
        tmux new-session -d;
        echo -e "Waiting for session to load..." >&2
        # Instead of waiting for random time we can utilise the `post-restore-all` hook from tmux-resurrect here
        # https://github.com/tmux-plugins/tmux-resurrect/blob/master/docs/hooks.md
        # sh "$XDG_CONFIG_HOME/tmux/plugins/tmux-resurrect/scripts/restore.sh"
        sleep 10;
    fi
fi

tmux_sessions=$(tmux list-sessions -F "#{session_name}" 2>/dev/null)
if [[ "${tmux_sessions}" ]]; then
    for session_name in ${tmux_sessions} ; do
        actual_session_name=$(get_actual_session_name "$session_icon_name_map" "$session_name")
        echo -e "Kitty window name: $actual_session_name and tmux session name: $session_name" >&2
        kitty -1 --title "${actual_session_name}" -e "${SHELL}" -lc "tmux a -t ${session_name}; ${SHELL}";
        sleep 1;
    done
else
    echo -e "No tmux session found at all" >&2
fi
